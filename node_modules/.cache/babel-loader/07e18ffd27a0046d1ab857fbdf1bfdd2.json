{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { checkTimeDifference } from '../helpers/time';\nconst initialState = {\n  seconds: 0,\n  minutes: 0,\n  hours: 0\n};\n\nconst useTimer = (existingStartTime = new Date().toLocaleTimeString(), isStart = true) => {\n  const [state, setState] = useState(() => initialState);\n  const [startTime, setStartTime] = useState(existingStartTime);\n  useEffect(() => {\n    let timer;\n\n    if (isStart) {\n      let letUpdatedTime = checkTimeDifference(startTime);\n      timer = setTimeout(() => {\n        var _letUpdatedTime$_data, _letUpdatedTime$_data2, _letUpdatedTime$_data3;\n\n        setState({\n          seconds: letUpdatedTime === null || letUpdatedTime === void 0 ? void 0 : (_letUpdatedTime$_data = letUpdatedTime._data) === null || _letUpdatedTime$_data === void 0 ? void 0 : _letUpdatedTime$_data.seconds,\n          minutes: letUpdatedTime === null || letUpdatedTime === void 0 ? void 0 : (_letUpdatedTime$_data2 = letUpdatedTime._data) === null || _letUpdatedTime$_data2 === void 0 ? void 0 : _letUpdatedTime$_data2.minutes,\n          hours: letUpdatedTime === null || letUpdatedTime === void 0 ? void 0 : (_letUpdatedTime$_data3 = letUpdatedTime._data) === null || _letUpdatedTime$_data3 === void 0 ? void 0 : _letUpdatedTime$_data3.hours\n        });\n      }, 1000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [state, isStart, startTime]);\n  return [state, setStartTime];\n};\n\nexport default useTimer;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/Work from home managementsystem/wfh-mate/src/hooks/useTimer.js"],"names":["useState","useEffect","checkTimeDifference","initialState","seconds","minutes","hours","useTimer","existingStartTime","Date","toLocaleTimeString","isStart","state","setState","startTime","setStartTime","timer","letUpdatedTime","setTimeout","_data","clearTimeout"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,mBAAR,QAAkC,iBAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,CADW;AAEnBC,EAAAA,OAAO,EAAC,CAFW;AAGnBC,EAAAA,KAAK,EAAC;AAHa,CAArB;;AAMA,MAAMC,QAAQ,GAAG,CAACC,iBAAiB,GAAC,IAAIC,IAAJ,GAAWC,kBAAX,EAAnB,EAAmDC,OAAO,GAAC,IAA3D,KAAoE;AACnF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,MAAIG,YAAL,CAAlC;AACA,QAAM,CAACW,SAAD,EAAWC,YAAX,IAA2Bf,QAAQ,CAACQ,iBAAD,CAAzC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,KAAJ;;AACA,QAAGL,OAAH,EAAW;AACT,UAAIM,cAAc,GAAEf,mBAAmB,CAACY,SAAD,CAAvC;AACAE,MAAAA,KAAK,GAAGE,UAAU,CAAC,MAAI;AAAA;;AACrBL,QAAAA,QAAQ,CAAC;AACNT,UAAAA,OAAO,EAACa,cAAD,aAACA,cAAD,gDAACA,cAAc,CAAEE,KAAjB,0DAAC,sBAAuBf,OADzB;AAENC,UAAAA,OAAO,EAACY,cAAD,aAACA,cAAD,iDAACA,cAAc,CAAEE,KAAjB,2DAAC,uBAAuBd,OAFzB;AAGNC,UAAAA,KAAK,EAACW,cAAD,aAACA,cAAD,iDAACA,cAAc,CAAEE,KAAjB,2DAAC,uBAAuBb;AAHvB,SAAD,CAAR;AAKD,OANiB,EAMhB,IANgB,CAAlB;AAOD;;AAED,WAAO,MAAMc,YAAY,CAACJ,KAAD,CAAzB;AAEF,GAfS,EAeR,CAACJ,KAAD,EAAQD,OAAR,EAAiBG,SAAjB,CAfQ,CAAT;AAiBD,SAAO,CAACF,KAAD,EAAOG,YAAP,CAAP;AAEA,CAvBD;;AAyBA,eAAeR,QAAf","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport {checkTimeDifference} from '../helpers/time';\r\n\r\nconst initialState = {\r\n  seconds:0,\r\n  minutes:0,\r\n  hours:0\r\n}\r\n\r\nconst useTimer = (existingStartTime=new Date().toLocaleTimeString(),isStart=true) => {\r\n  const [state, setState] = useState(()=>initialState);\r\n  const [startTime,setStartTime] = useState(existingStartTime);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if(isStart){\r\n      let letUpdatedTime= checkTimeDifference(startTime)\r\n      timer = setTimeout(()=>{\r\n        setState({\r\n           seconds:letUpdatedTime?._data?.seconds ,\r\n           minutes:letUpdatedTime?._data?.minutes,\r\n           hours:letUpdatedTime?._data?.hours\r\n        });\r\n      },1000)\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n    \r\n },[state, isStart, startTime])\r\n\r\n return [state,setStartTime]\r\n\r\n}\r\n\r\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}