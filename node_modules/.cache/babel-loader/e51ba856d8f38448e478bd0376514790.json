{"ast":null,"code":"import { useState, useEffect } from 'react';\nconst initialState = {\n  seconds: 0,\n  minutes: 0\n};\n\nconst useReduceTimer = (existingState = initialState, isStart = false, isPause = true) => {\n  const [state, setState] = useState(() => existingState);\n  useEffect(() => {\n    let timer;\n\n    if (isStart && isPause) {\n      timer = setTimeout(() => {\n        if ((state === null || state === void 0 ? void 0 : state.seconds) <= 59 && (state === null || state === void 0 ? void 0 : state.seconds) > 0) {\n          setState(prevState => {\n            return { ...prevState,\n              seconds: prevState.seconds - 1\n            };\n          });\n        }\n\n        if ((state === null || state === void 0 ? void 0 : state.seconds) === 0 && (state === null || state === void 0 ? void 0 : state.minutes) > 0) {\n          setState(prevState => {\n            return { ...prevState,\n              seconds: 59,\n              minutes: prevState.minutes - 1\n            };\n          });\n        }\n      }, 1000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [state, isStart, isPause]);\n  return [state, setState];\n};\n\nexport default useReduceTimer;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/React-Deploy/src/hooks/useReduceTimer.js"],"names":["useState","useEffect","initialState","seconds","minutes","useReduceTimer","existingState","isStart","isPause","state","setState","timer","setTimeout","prevState","clearTimeout"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,CADW;AAEnBC,EAAAA,OAAO,EAAC;AAFW,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,aAAa,GAACJ,YAAf,EAA4BK,OAAO,GAAC,KAApC,EAA0CC,OAAO,GAAC,IAAlD,KAA2D;AAEhF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,MAAIM,aAAL,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAJ;;AACA,QAAGJ,OAAO,IAAIC,OAAd,EAAsB;AACpBG,MAAAA,KAAK,GAAGC,UAAU,CAAC,MAAI;AACrB,YAAG,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEN,OAAP,KAAgB,EAAhB,IAAsB,CAAAM,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEN,OAAP,IAAe,CAAxC,EAA0C;AACxCO,UAAAA,QAAQ,CAACG,SAAS,IAAI;AACrB,mBAAO,EAAC,GAAGA,SAAJ;AAAeV,cAAAA,OAAO,EAAEU,SAAS,CAACV,OAAV,GAAkB;AAA1C,aAAP;AACD,WAFQ,CAAR;AAGD;;AACD,YAAG,CAAAM,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEN,OAAP,MAAiB,CAAjB,IAAsB,CAAAM,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEL,OAAP,IAAe,CAAxC,EAA0C;AACxCM,UAAAA,QAAQ,CAACG,SAAS,IAAI;AACpB,mBAAO,EAAC,GAAGA,SAAJ;AAAcV,cAAAA,OAAO,EAAE,EAAvB;AAA0BC,cAAAA,OAAO,EAACS,SAAS,CAACT,OAAV,GAAkB;AAApD,aAAP;AACD,WAFO,CAAR;AAGA;AACH,OAXiB,EAWhB,IAXgB,CAAlB;AAYD;;AAED,WAAO,MAAMU,YAAY,CAACH,KAAD,CAAzB;AAEF,GAnBS,EAmBR,CAACF,KAAD,EAAOF,OAAP,EAAeC,OAAf,CAnBQ,CAAT;AAqBD,SAAO,CAACC,KAAD,EAAOC,QAAP,CAAP;AAEA,CA3BD;;AA6BA,eAAeL,cAAf","sourcesContent":["import {useState,useEffect} from 'react';\r\n\r\nconst initialState = {\r\n  seconds:0,\r\n  minutes:0,\r\n}\r\n\r\nconst useReduceTimer = (existingState=initialState,isStart=false,isPause=true) => {\r\n\r\n  const [state, setState] = useState(()=>existingState);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if(isStart && isPause){\r\n      timer = setTimeout(()=>{\r\n        if(state?.seconds<=59 && state?.seconds>0){\r\n          setState(prevState => {\r\n           return {...prevState, seconds: prevState.seconds-1};\r\n         });\r\n        }\r\n        if(state?.seconds===0 && state?.minutes>0){\r\n          setState(prevState => {\r\n            return {...prevState,seconds: 59,minutes:prevState.minutes-1};\r\n          });\r\n         }\r\n      },1000)\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n    \r\n },[state,isStart,isPause])\r\n\r\n return [state,setState]\r\n\r\n}\r\n\r\nexport default useReduceTimer;"]},"metadata":{},"sourceType":"module"}