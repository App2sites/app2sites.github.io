{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lilach Karagula\\\\Desktop\\\\Work from home managementsystem\\\\wfh-mate\\\\src\\\\components\\\\breakTimer\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Switch from '../../uiElements/switch';\nimport { Tooltip, message } from 'antd';\nimport ProgressBar from '../../uiElements/progress';\nimport { ALARM_TONE } from '../../helpers/sounds';\nimport DesktopNotification from '../../uiElements/desktopNotification';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useReduceTimer from '../../hooks/useReduceTimer';\nimport useBreakTimer from '../../hooks/useBreakTimer';\nimport PlayButton from \"../icons/play.svg\";\nimport StopButton from \"../icons/stop.svg\";\nimport PlusIcon from \"../icons/plus.svg\";\nimport MinusIcon from \"../icons/minus.svg\";\nimport TiredIllustration from '../illustrations/tired.png';\nimport './breakTimer.css';\nvar breakTimerSetIntervalTime = 0;\nconst audio = new Audio(ALARM_TONE);\n\nconst BreakTimer = () => {\n  const [breakTime, setBreakTime] = useState({\n    seconds: 0,\n    minutes: 5\n  });\n  const [isBreakStartClicked, setBreakStartClicked] = useState(false);\n  const [{\n    state: isEnableNotification,\n    setState: setEnableNotification\n  }] = useLocalStorage('isDesktopNotificationBreak', true);\n  const [{\n    state: isAlarmEnabled,\n    setState: setAlarmEnabled\n  }] = useLocalStorage('isAlarmEnabled', true);\n  const [state, setState] = useReduceTimer({\n    minutes: 5,\n    seconds: 0\n  }, isBreakStartClicked);\n  const [timer, setTotalBreakTiming] = useBreakTimer();\n  const [showDesktopNotification, setDesktopNotification] = useState(false);\n\n  window.onbeforeunload = function () {\n    return 'err';\n  };\n\n  useEffect(() => {\n    return () => clearInterval(breakTimerSetIntervalTime);\n  }, []);\n\n  const handleSetInterval = () => {\n    breakTimerSetIntervalTime = setInterval(function () {\n      if (isEnableNotification) {\n        setDesktopNotification(true);\n      }\n\n      if (isAlarmEnabled) {\n        playAudio();\n      }\n\n      handleEnd(false);\n    }, (breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes) * 60000);\n  };\n\n  const playAudio = () => {\n    audio.play();\n  };\n\n  const stopAudio = audio => {\n    audio.pause();\n    audio.currentTime = 0;\n  };\n\n  const handleIncrement = () => {\n    if ((breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes) < 60) {\n      setBreakTime(prevBreakTime => {\n        return { ...prevBreakTime,\n          minutes: prevBreakTime.minutes + 5\n        };\n      });\n      setState(prevState => {\n        return { ...prevState,\n          minutes: prevState.minutes + 5\n        };\n      });\n    }\n  };\n\n  const handleDecrement = () => {\n    if ((breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes) > 5) {\n      setBreakTime(prevBreakTime => {\n        return { ...prevBreakTime,\n          minutes: prevBreakTime.minutes - 5\n        };\n      });\n      setState(prevState => {\n        return { ...prevState,\n          minutes: prevState.minutes - 5\n        };\n      });\n    }\n  };\n\n  const handleStart = () => {\n    message.info(`${breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes} min break started!`);\n    setBreakStartClicked(!isBreakStartClicked);\n    setState(breakTime);\n    setTotalBreakTiming(breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes);\n    handleSetInterval();\n  };\n\n  const handleEnd = (fromIntervalFn = true) => {\n    setBreakStartClicked(false);\n\n    if (isBreakStartClicked) {\n      timer({\n        breakTaken: fromIntervalFn ? state : breakTime,\n        totalBreak: breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes\n      });\n    }\n\n    setState({\n      seconds: 0,\n      minutes: breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes\n    });\n    window.clearInterval(breakTimerSetIntervalTime);\n    fromIntervalFn && stopAudio(audio);\n  };\n\n  const resetValue = () => {\n    setDesktopNotification(false);\n  };\n\n  const handleDesktopSwitchChange = value => {\n    setEnableNotification(value);\n  };\n\n  const handleAlertSwitchChange = value => {\n    setAlarmEnabled(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"break-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"bottomRight\",\n    title: \"Tired ? No clue ? Taking a break really helps to solve things...\\uD83D\\uDE09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tired-img-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"tired-img-figure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"break-control-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-break-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"\\u05DC\\u05E7\\u05D7\\u05EA \\u05E4\\u05E1\\u05E7 \\u05D6\\u05DE\\u05DF\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-break-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"set-break-icon\",\n    onClick: handleIncrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: PlusIcon,\n    alt: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 71\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }\n  }, breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes, \"  \\u05D3\\u05E7\\u05D5\\u05EA\"), /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"set-break-icon\",\n    onClick: handleDecrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: MinusIcon,\n    alt: \"minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 73\n    }\n  }), \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switch-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    label: \"התראה בשולחן העבודה\",\n    handleSwitchChange: handleDesktopSwitchChange,\n    checked: isEnableNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    label: \"התראה עם צלצול\",\n    handleSwitchChange: handleAlertSwitchChange,\n    checked: isAlarmEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    time: state,\n    totalTime: breakTime === null || breakTime === void 0 ? void 0 : breakTime.minutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer-control-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"timer-icons\",\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"timer-img\",\n    src: PlayButton,\n    alt: \"play/pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"timer-icons\",\n    onClick: handleEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"timer-img\",\n    src: StopButton,\n    alt: \"stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 61\n    }\n  })))), /*#__PURE__*/React.createElement(DesktopNotification, {\n    title: \"WFH mate\",\n    body: \"hey mate break time over!\",\n    timing: 8000,\n    showDesktopNotification: isEnableNotification ? showDesktopNotification : false,\n    resetValue: resetValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default BreakTimer;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/Work from home managementsystem/wfh-mate/src/components/breakTimer/index.js"],"names":["React","useState","useEffect","Switch","Tooltip","message","ProgressBar","ALARM_TONE","DesktopNotification","useLocalStorage","useReduceTimer","useBreakTimer","TiredIllustration","breakTimerSetIntervalTime","audio","Audio","BreakTimer","breakTime","setBreakTime","seconds","minutes","isBreakStartClicked","setBreakStartClicked","state","isEnableNotification","setState","setEnableNotification","isAlarmEnabled","setAlarmEnabled","timer","setTotalBreakTiming","showDesktopNotification","setDesktopNotification","window","onbeforeunload","clearInterval","handleSetInterval","setInterval","playAudio","handleEnd","play","stopAudio","pause","currentTime","handleIncrement","prevBreakTime","prevState","handleDecrement","handleStart","info","fromIntervalFn","breakTaken","totalBreak","resetValue","handleDesktopSwitchChange","value","handleAlertSwitchChange","PlusIcon","MinusIcon","PlayButton","StopButton"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Switch from '../../uiElements/switch';\r\nimport { Tooltip,message } from 'antd';\r\nimport ProgressBar from '../../uiElements/progress';\r\nimport {ALARM_TONE} from '../../helpers/sounds';\r\nimport DesktopNotification from '../../uiElements/desktopNotification';\r\nimport useLocalStorage  from '../../hooks/useLocalStorage';\r\nimport useReduceTimer from '../../hooks/useReduceTimer';\r\nimport useBreakTimer from '../../hooks/useBreakTimer';\r\nimport PlayButton from '../icons/play.svg';\r\nimport StopButton from '../icons/stop.svg';\r\nimport PlusIcon from '../icons/plus.svg';\r\nimport MinusIcon from '../icons/minus.svg';\r\nimport TiredIllustration from '../illustrations/tired.png';\r\nimport './breakTimer.css';\r\n\r\nvar breakTimerSetIntervalTime=0;\r\nconst audio = new Audio(ALARM_TONE);\r\nconst BreakTimer = () => {\r\n  const [breakTime,setBreakTime] = useState({\r\n    seconds:0,\r\n    minutes:5\r\n  });\r\n  const [isBreakStartClicked,setBreakStartClicked] = useState(false);\r\n  const [{state:isEnableNotification,setState:setEnableNotification}] = useLocalStorage('isDesktopNotificationBreak',true);\r\n  const [{state:isAlarmEnabled,setState:setAlarmEnabled}] = useLocalStorage('isAlarmEnabled',true);\r\n  const [state,setState] = useReduceTimer({minutes:5,seconds:0},isBreakStartClicked)\r\n  const [timer,setTotalBreakTiming] = useBreakTimer()\r\n  const [showDesktopNotification,setDesktopNotification] = useState(false);\r\n\r\n  window.onbeforeunload = function() {\r\n      return 'err';\r\n  };\r\n\r\n  useEffect(()=>{\r\n    return (()=> clearInterval(breakTimerSetIntervalTime))\r\n  },[])\r\n\r\n  const handleSetInterval = () => {\r\n    breakTimerSetIntervalTime=setInterval(function(){\r\n      if(isEnableNotification){\r\n        setDesktopNotification(true)\r\n       }\r\n       if(isAlarmEnabled){\r\n         playAudio()\r\n       }\r\n       handleEnd(false)\r\n       }, breakTime?.minutes * 60000);\r\n   }\r\n\r\n  const playAudio = () => {\r\n    audio.play();\r\n  }\r\n\r\n  const stopAudio=(audio)=> {\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n}\r\n\r\n\r\n  const handleIncrement = () => {\r\n    if(breakTime?.minutes<60)\r\n    {\r\n      setBreakTime(prevBreakTime => {\r\n        return {...prevBreakTime, minutes: prevBreakTime.minutes+5};\r\n      });\r\n      setState(prevState => {\r\n          return {...prevState, minutes: prevState.minutes+5};\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDecrement = () => {\r\n     if(breakTime?.minutes>5)\r\n     {\r\n      setBreakTime(prevBreakTime => {\r\n        return {...prevBreakTime, minutes: prevBreakTime.minutes-5};\r\n      });\r\n      setState(prevState => {\r\n        return {...prevState, minutes: prevState.minutes-5};\r\n    })\r\n     }\r\n   \r\n  }\r\n\r\n  const handleStart = () => {\r\n    message.info(`${breakTime?.minutes} min break started!`);\r\n\r\n    setBreakStartClicked(!isBreakStartClicked);\r\n    setState(breakTime)\r\n    setTotalBreakTiming(breakTime?.minutes)\r\n    handleSetInterval()\r\n  }\r\n\r\n  const handleEnd = (fromIntervalFn=true) => {\r\n    setBreakStartClicked(false);\r\n    if(isBreakStartClicked){\r\n      timer({\r\n        breakTaken : fromIntervalFn ? state: breakTime,\r\n        totalBreak : breakTime?.minutes\r\n      })\r\n    }\r\n  \r\n    setState({\r\n      seconds:0,\r\n      minutes:breakTime?.minutes\r\n    })\r\n    window.clearInterval(breakTimerSetIntervalTime)\r\n    fromIntervalFn && stopAudio(audio)\r\n  }\r\n\r\n  const resetValue = () => {\r\n    setDesktopNotification(false)\r\n  }\r\n\r\n  const handleDesktopSwitchChange = (value) => {\r\n    setEnableNotification(value)\r\n  }\r\n\r\n  const handleAlertSwitchChange = (value) => {\r\n    setAlarmEnabled(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"break-wrapper\">\r\n      <Tooltip  placement=\"bottomRight\" title=\"Tired ? No clue ? Taking a break really helps to solve things...😉\">\r\n      <div className=\"tired-img-wrapper\">\r\n        <figure className=\"tired-img-figure\">\r\n        </figure>\r\n      </div>\r\n      </Tooltip>\r\n\r\n     <div className=\"break-control-wrapper\">\r\n      <div className=\"set-break-wrapper\">\r\n        <p>לקחת פסק זמן</p>\r\n        <div className=\"set-break-time\">\r\n         <figure className=\"set-break-icon\" onClick={handleIncrement}><img src={PlusIcon} alt=\"plus\"/> </figure>\r\n           <p>{breakTime?.minutes}  דקות</p>\r\n           <figure className=\"set-break-icon\" onClick={handleDecrement}><img src={MinusIcon} alt=\"minus\"/> </figure>\r\n        </div>\r\n       </div>\r\n\r\n        <div className=\"switch-wrapper\">\r\n        <Switch label={\"התראה בשולחן העבודה\"} handleSwitchChange={handleDesktopSwitchChange} checked={isEnableNotification}/>\r\n        <Switch label={\"התראה עם צלצול\"} handleSwitchChange={handleAlertSwitchChange} checked={isAlarmEnabled}/>\r\n        </div>\r\n      </div> \r\n\r\n      <div>\r\n       <ProgressBar time={state} totalTime={breakTime?.minutes}/>\r\n      <div className=\"timer-control-wrapper\">\r\n        <figure className=\"timer-icons\" onClick={handleStart}><img className=\"timer-img\" src={PlayButton} alt=\"play/pause\"/></figure>\r\n        <figure className=\"timer-icons\" onClick={handleEnd}><img className=\"timer-img\"  src={StopButton} alt=\"stop\"/></figure>\r\n       </div>\r\n      </div>\r\n\r\n       <DesktopNotification\r\n        title=\"WFH mate\"\r\n        body=\"hey mate break time over!\"\r\n        timing ={8000}\r\n        showDesktopNotification = { isEnableNotification?showDesktopNotification:false }\r\n        resetValue = { resetValue }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BreakTimer;"]},"metadata":{},"sourceType":"module"}