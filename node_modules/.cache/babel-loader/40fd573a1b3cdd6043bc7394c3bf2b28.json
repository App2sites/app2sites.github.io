{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useLocalStorage from './useLocalStorage';\n\nconst useBreakTimer = () => {\n  const [{\n    state: totalBreakTaken,\n    setState: setTotalBreakTaken\n  }] = useLocalStorage('breakTaken', {\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  const [state, setState] = useState(null);\n  const [totalBreakTime, setTotalBreakTiming] = useState(5);\n\n  const updateBreakTimer = (existingBreakTime, state) => {\n    if (state === null || state === void 0 ? void 0 : state.breakTaken) {\n      var _state$breakTaken5, _state$breakTaken6, _state$breakTaken7, _state$breakTaken8, _state$breakTaken9;\n\n      let result = { ...existingBreakTime\n      };\n      let isAlreadyDone = false;\n\n      if ((result === null || result === void 0 ? void 0 : result.hours) === 0 && (result === null || result === void 0 ? void 0 : result.minutes) === 0 && (result === null || result === void 0 ? void 0 : result.seconds) === 0) {\n        var _state$breakTaken, _state$breakTaken2, _state$breakTaken3, _state$breakTaken4;\n\n        result.minutes = (state === null || state === void 0 ? void 0 : state.totalBreak) === (state === null || state === void 0 ? void 0 : (_state$breakTaken = state.breakTaken) === null || _state$breakTaken === void 0 ? void 0 : _state$breakTaken.minutes) ? state === null || state === void 0 ? void 0 : state.totalBreak : (state === null || state === void 0 ? void 0 : state.totalBreak) - 1 - (state === null || state === void 0 ? void 0 : (_state$breakTaken2 = state.breakTaken) === null || _state$breakTaken2 === void 0 ? void 0 : _state$breakTaken2.minutes);\n        result.seconds = 60 - ((state === null || state === void 0 ? void 0 : (_state$breakTaken3 = state.breakTaken) === null || _state$breakTaken3 === void 0 ? void 0 : _state$breakTaken3.seconds) > 0 ? state === null || state === void 0 ? void 0 : (_state$breakTaken4 = state.breakTaken) === null || _state$breakTaken4 === void 0 ? void 0 : _state$breakTaken4.seconds : 60);\n        isAlreadyDone = true;\n      }\n\n      if (60 - ((state === null || state === void 0 ? void 0 : (_state$breakTaken5 = state.breakTaken) === null || _state$breakTaken5 === void 0 ? void 0 : _state$breakTaken5.seconds) > 0 ? state === null || state === void 0 ? void 0 : (_state$breakTaken6 = state.breakTaken) === null || _state$breakTaken6 === void 0 ? void 0 : _state$breakTaken6.seconds : 60) + (existingBreakTime === null || existingBreakTime === void 0 ? void 0 : existingBreakTime.seconds) > 59) {\n        result.minutes = (result === null || result === void 0 ? void 0 : result.minutes) + 1;\n        result.seconds = 0;\n        isAlreadyDone = true;\n      }\n\n      if (totalBreakTime - ((state === null || state === void 0 ? void 0 : (_state$breakTaken7 = state.breakTaken) === null || _state$breakTaken7 === void 0 ? void 0 : _state$breakTaken7.minutes) < totalBreakTaken ? state === null || state === void 0 ? void 0 : (_state$breakTaken8 = state.breakTaken) === null || _state$breakTaken8 === void 0 ? void 0 : _state$breakTaken8.minutes : 0) + (existingBreakTime === null || existingBreakTime === void 0 ? void 0 : existingBreakTime.minutes) > 59) {\n        result.hours = (result === null || result === void 0 ? void 0 : result.hours) + 1;\n        result.minutes = 0;\n        isAlreadyDone = true;\n      }\n\n      if ((state === null || state === void 0 ? void 0 : (_state$breakTaken9 = state.breakTaken) === null || _state$breakTaken9 === void 0 ? void 0 : _state$breakTaken9.minutes) === (state === null || state === void 0 ? void 0 : state.totalBreak) && !isAlreadyDone) {\n        result.minutes = (result === null || result === void 0 ? void 0 : result.minutes) + (state === null || state === void 0 ? void 0 : state.totalBreak);\n        isAlreadyDone = true;\n      }\n\n      if (!isAlreadyDone) {\n        var _state$breakTaken10, _state$breakTaken11;\n\n        result.minutes = (result === null || result === void 0 ? void 0 : result.minutes) + ((state === null || state === void 0 ? void 0 : state.totalBreak) - 1 - (state === null || state === void 0 ? void 0 : (_state$breakTaken10 = state.breakTaken) === null || _state$breakTaken10 === void 0 ? void 0 : _state$breakTaken10.minutes));\n        result.seconds = (result === null || result === void 0 ? void 0 : result.seconds) + (60 - (state === null || state === void 0 ? void 0 : (_state$breakTaken11 = state.breakTaken) === null || _state$breakTaken11 === void 0 ? void 0 : _state$breakTaken11.seconds));\n      }\n\n      setTotalBreakTaken(result);\n    }\n  };\n\n  useEffect(() => {\n    let existingBreakTime = { ...totalBreakTaken\n    };\n    updateBreakTimer(existingBreakTime, state);\n  }, [state]);\n  return [setState, setTotalBreakTiming];\n};\n\nexport default useBreakTimer;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/Work from home managementsystem/mom2/Work from home tool/src/hooks/useBreakTimer.js"],"names":["useEffect","useState","useLocalStorage","useBreakTimer","state","totalBreakTaken","setState","setTotalBreakTaken","hours","minutes","seconds","totalBreakTime","setTotalBreakTiming","updateBreakTimer","existingBreakTime","breakTaken","result","isAlreadyDone","totalBreak"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react';\r\nimport useLocalStorage  from './useLocalStorage';\r\n\r\nconst useBreakTimer = () => {\r\n  const [{state:totalBreakTaken,setState:setTotalBreakTaken}] = useLocalStorage('breakTaken',{hours:0,minutes:0,seconds:0});\r\n  const [state,setState] = useState(null);\r\n  const [totalBreakTime,setTotalBreakTiming] = useState(5)\r\n\r\n  const updateBreakTimer = (existingBreakTime,state) => {\r\n    if(state?.breakTaken){\r\n      let result = {...existingBreakTime}\r\n      let isAlreadyDone = false;\r\n\r\n      if(result?.hours === 0 && result?.minutes === 0 && result?.seconds === 0){\r\n        result.minutes = (state?.totalBreak === state?.breakTaken?.minutes) ? state?.totalBreak : ((state?.totalBreak-1) - state?.breakTaken?.minutes)\r\n        result.seconds = 60-(state?.breakTaken?.seconds > 0 ?state?.breakTaken?.seconds : 60);\r\n        isAlreadyDone = true\r\n      }\r\n\r\n      if(((60-(state?.breakTaken?.seconds > 0 ?state?.breakTaken?.seconds:60)) + existingBreakTime?.seconds) > 59){\r\n        result.minutes = result?.minutes + 1;\r\n        result.seconds = 0 \r\n        isAlreadyDone = true\r\n      }\r\n\r\n      if(((totalBreakTime-(state?.breakTaken?.minutes < totalBreakTaken ? state?.breakTaken?.minutes: 0)) + existingBreakTime?.minutes) > 59){\r\n        result.hours = result?.hours + 1;\r\n        result.minutes = 0\r\n        isAlreadyDone = true\r\n      }\r\n\r\n      if(state?.breakTaken?.minutes === state?.totalBreak && !isAlreadyDone){\r\n        result.minutes = result?.minutes+state?.totalBreak;\r\n        isAlreadyDone =true\r\n      }\r\n\r\n      if(!isAlreadyDone){\r\n        result.minutes = result?.minutes+((state?.totalBreak-1)-state?.breakTaken?.minutes);\r\n        result.seconds = result?.seconds+(60-state?.breakTaken?.seconds);\r\n      }\r\n\r\n      setTotalBreakTaken(result)\r\n    }\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n     let existingBreakTime = {...totalBreakTaken}\r\n      updateBreakTimer(existingBreakTime,state);\r\n  }, [state])\r\n\r\n  return [setState,setTotalBreakTiming]\r\n}\r\n\r\nexport default useBreakTimer\r\n"]},"metadata":{},"sourceType":"module"}