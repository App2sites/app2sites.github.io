{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lilach Karagula\\\\Desktop\\\\Work from home managementsystem\\\\wfh-mate\\\\src\\\\uiElements\\\\todo.js\";\nimport React from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { Checkbox } from 'antd';\nimport '../uiElements/uiStyles/todo.css';\nconst initialData = [{\n  id: 0,\n  completed: false,\n  todoText: ''\n}];\n\nconst TodoElement = () => {\n  const [{\n    state: todoValues,\n    setState: setTodoValues\n  }] = useLocalStorage('todoList', initialData);\n\n  const handleKeyPress = (e, index) => {\n    if (e.key === 'Enter' && !e.shiftKey && todoValues.length < 10) {\n      e.preventDefault();\n      let newTodoElement = {\n        id: todoValues.length,\n        completed: false,\n        todoText: ''\n      };\n      setTodoValues([...todoValues, newTodoElement]);\n    }\n\n    if (e.key === \"Backspace\" || e.key === \"Delete\") {\n      let updatedValue = [...todoValues];\n\n      if (!todoValues[index].todoText && updatedValue.length > 1) {\n        updatedValue.splice(index, 1);\n        setTodoValues(updatedValue);\n      }\n    }\n  };\n\n  const handleCheckBoxChange = index => {\n    let updatedValue = [...todoValues];\n    todoValues[index].completed = !todoValues[index].completed;\n    setTodoValues(updatedValue);\n  };\n\n  const handleTextChange = (e, index) => {\n    let updatedValue = [...todoValues];\n    todoValues[index].todoText = e.target.value;\n    setTodoValues(updatedValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, todoValues === null || todoValues === void 0 ? void 0 : todoValues.map((eachTodoItems, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-elements\",\n      key: eachTodoItems === null || eachTodoItems === void 0 ? void 0 : eachTodoItems.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"todo-checkbox\",\n      onChange: () => handleCheckBoxChange(i),\n      checked: eachTodoItems === null || eachTodoItems === void 0 ? void 0 : eachTodoItems.completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: true,\n      className: \"todo-input\",\n      placeholder: i === 0 ? '' : '',\n      onKeyDown: e => handleKeyPress(e, i),\n      onChange: e => handleTextChange(e, i),\n      value: eachTodoItems === null || eachTodoItems === void 0 ? void 0 : eachTodoItems.todoText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\nexport default TodoElement;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/Work from home managementsystem/wfh-mate/src/uiElements/todo.js"],"names":["React","useLocalStorage","Checkbox","initialData","id","completed","todoText","TodoElement","state","todoValues","setState","setTodoValues","handleKeyPress","e","index","key","shiftKey","length","preventDefault","newTodoElement","updatedValue","splice","handleCheckBoxChange","handleTextChange","target","value","map","eachTodoItems","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport useLocalStorage  from '../hooks/useLocalStorage';\r\nimport { Checkbox } from 'antd';\r\nimport '../uiElements/uiStyles/todo.css';\r\n\r\n\r\nconst initialData = [{id:0,completed:false,todoText:''}];\r\n\r\nconst TodoElement = () => {\r\n  const [{state:todoValues,setState:setTodoValues}] = useLocalStorage('todoList',initialData);\r\n\r\n  const handleKeyPress = (e,index) => {\r\n    if(e.key==='Enter' && !e.shiftKey &&todoValues.length<10){\r\n      e.preventDefault()\r\n      let newTodoElement = {id:todoValues.length,completed:false,todoText:''}\r\n      setTodoValues([\r\n        ...todoValues,\r\n        newTodoElement\r\n      ])\r\n    }\r\n    \r\n    if(e.key === \"Backspace\" || e.key === \"Delete\"){\r\n      let updatedValue = [...todoValues];\r\n      if(!todoValues[index].todoText && updatedValue.length>1){\r\n        updatedValue.splice(index,1)\r\n        setTodoValues(updatedValue)\r\n      }\r\n       \r\n    }\r\n  }\r\n\r\n  const handleCheckBoxChange = (index) => {\r\n    let updatedValue = [...todoValues];\r\n    todoValues[index].completed = !todoValues[index].completed\r\n    setTodoValues(updatedValue);\r\n  }\r\n  const handleTextChange = (e,index) => {\r\n    let updatedValue = [...todoValues];\r\n    todoValues[index].todoText = e.target.value\r\n    setTodoValues(updatedValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-wrapper\">\r\n      {todoValues?.map((eachTodoItems,i)=>{\r\n        return(\r\n         <div className=\"todo-elements\" key={eachTodoItems?.id}>\r\n          <Checkbox className=\"todo-checkbox\" onChange={()=>handleCheckBoxChange(i)} checked={eachTodoItems?.completed} />\r\n          <input \r\n           autoFocus \r\n           className=\"todo-input\"\r\n           placeholder ={i===0?'':''}\r\n           onKeyDown={(e)=>handleKeyPress(e,i)} \r\n           onChange={(e)=>handleTextChange(e,i)} \r\n           value={eachTodoItems?.todoText}/>\r\n         </div>\r\n        )\r\n      })}\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoElement;"]},"metadata":{},"sourceType":"module"}