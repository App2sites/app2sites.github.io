{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lilach Karagula\\\\Desktop\\\\React-Deploy\\\\src\\\\uiElements\\\\switch.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch } from 'antd';\nimport './uiStyles/switch.css';\n\nconst Toggle = ({\n  children,\n  handleSwitchChange,\n  checked\n}) => {\n  const [on, setOn] = useState(false);\n  useEffect(() => {\n    if (checked) {\n      setOn(true);\n    }\n  }, [checked]);\n\n  const onChange = value => {\n    handleSwitchChange(value);\n    setOn(!on);\n  };\n\n  return React.Children.map(children, child => {\n    return typeof child.type === 'string' ? child : React.cloneElement(child, {\n      on,\n      onChange\n    });\n  });\n};\n\nconst ToggleOn = ({\n  on,\n  children\n}) => children;\n\nconst ToggleButton = ({\n  on,\n  onChange\n}) => /*#__PURE__*/React.createElement(Switch, {\n  checked: on,\n  onChange: onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 42\n  }\n});\n\nconst SwitchElement = ({\n  label = 'Switch',\n  handleSwitchChange,\n  checked\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switch-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    handleSwitchChange: handleSwitchChange,\n    checked: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleOn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, label)), /*#__PURE__*/React.createElement(ToggleButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SwitchElement;","map":{"version":3,"sources":["C:/Users/Lilach Karagula/Desktop/React-Deploy/src/uiElements/switch.js"],"names":["React","useState","useEffect","Switch","Toggle","children","handleSwitchChange","checked","on","setOn","onChange","value","Children","map","child","type","cloneElement","ToggleOn","ToggleButton","SwitchElement","label"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,uBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,kBAAV;AAA6BC,EAAAA;AAA7B,CAAD,KAA2C;AACxD,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAaR,QAAQ,CAAC,KAAD,CAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,QAAGK,OAAH,EAAW;AACVE,MAAAA,KAAK,CAAC,IAAD,CAAL;AACA;AACH,GAJQ,EAIN,CAACF,OAAD,CAJM,CAAT;;AAMA,QAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1BL,IAAAA,kBAAkB,CAACK,KAAD,CAAlB;AACAF,IAAAA,KAAK,CAAC,CAACD,EAAF,CAAL;AACD,GAHD;;AAKA,SAAOR,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6BS,KAAK,IAAI;AAC3C,WAAO,OAAOA,KAAK,CAACC,IAAb,KAAsB,QAAtB,GACHD,KADG,GAEHd,KAAK,CAACgB,YAAN,CAAmBF,KAAnB,EAA0B;AAACN,MAAAA,EAAD;AAAKE,MAAAA;AAAL,KAA1B,CAFJ;AAGD,GAJM,CAAP;AAMD,CApBD;;AAsBA,MAAMO,QAAQ,GAAG,CAAC;AAACT,EAAAA,EAAD;AAAIH,EAAAA;AAAJ,CAAD,KAAoBA,QAArC;;AACA,MAAMa,YAAY,GAAG,CAAC;AAACV,EAAAA,EAAD;AAAIE,EAAAA;AAAJ,CAAD,kBAAoB,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEF,EAAjB;AAAqB,EAAA,QAAQ,EAAEE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAzC;;AAEA,MAAMS,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAC,QAAP;AAAgBd,EAAAA,kBAAhB;AAAmCC,EAAAA;AAAnC,CAAD,KAAiD;AACrE,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,kBAAkB,EAAED,kBAA5B;AAAgD,IAAA,OAAO,EAAEC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMa,KAAN,CAAV,CADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CATD;;AAWA,eAAeD,aAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { Switch } from 'antd';\r\nimport './uiStyles/switch.css';\r\n\r\nconst Toggle = ({children,handleSwitchChange,checked}) => {\r\n  const [on,setOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n     if(checked){\r\n      setOn(true);\r\n     }\r\n  }, [checked])\r\n\r\n  const onChange = (value) => {\r\n    handleSwitchChange(value);\r\n    setOn(!on)\r\n  }\r\n\r\n  return React.Children.map(children, child => {\r\n    return typeof child.type === 'string'\r\n      ? child\r\n      : React.cloneElement(child, {on, onChange})\r\n  })\r\n\r\n}\r\n\r\nconst ToggleOn = ({on,children}) => (children)\r\nconst ToggleButton = ({on,onChange}) => (<Switch checked={on} onChange={onChange}/>)\r\n\r\nconst SwitchElement = ({label='Switch',handleSwitchChange,checked}) => {\r\n  return (\r\n    <div className=\"switch-class\">\r\n      <Toggle handleSwitchChange={handleSwitchChange} checked={checked}>\r\n        <ToggleOn><div>{label}</div></ToggleOn>\r\n        <ToggleButton/>\r\n       </Toggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SwitchElement;"]},"metadata":{},"sourceType":"module"}